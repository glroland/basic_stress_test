kind: DeploymentConfig
apiVersion: apps.openshift.io/v1
metadata:
  annotations:
    app.openshift.io/vcs-ref: master
    app.openshift.io/vcs-uri: 'https://github.com/glroland/basic_stress_test.git'
    openshift.io/generated-by: OpenShiftWebConsole
  name: stress-svc
  labels:
    app: stress-svc
    app.kubernetes.io/component: stress-svc
    app.kubernetes.io/instance: stress-svc
    app.kubernetes.io/name: java
    app.kubernetes.io/part-of: basic-stress-test-git-app
    app.openshift.io/runtime: java
    app.openshift.io/runtime-version: '11'
spec:
  strategy:
    type: Rolling
    rollingParams:
      updatePeriodSeconds: 1
      intervalSeconds: 1
      timeoutSeconds: 600
      maxUnavailable: 25%
      maxSurge: 25%
    resources: {}
    activeDeadlineSeconds: 21600
  triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
          - stress-svc
        from:
          kind: ImageStreamTag
          namespace: stress
          name: 'stress-svc:latest'
    - type: ConfigChange
  replicas: 3
  revisionHistoryLimit: 10
  test: false
  selector:
    app: stress-svc
    deploymentconfig: stress-svc
  template:
    metadata:
      creationTimestamp: null
      labels:
        app: stress-svc
        deploymentconfig: stress-svc
    spec:
      containers:
        - name: stress-svc
          ports:
            - containerPort: 8080
              protocol: TCP
            - containerPort: 8443
              protocol: TCP
            - containerPort: 8778
              protocol: TCP
          env:
            - name: STRESS_URL
              value: 'http://stress-svc:8080'
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
